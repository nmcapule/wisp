version: "3"
services:
  backend-octarine:
    privileged: true
    container_name: wisp-backend-octarine
    depends_on:
      - backend-blind-io
      - backend-peerserver
      - storage-redis
      - storage-postgres
    build:
      context: ./backend/octarine
      dockerfile: ./Dockerfile.dev
    environment:
      STORAGE_REDIS_URL: ${STORAGE_REDIS_URL}
      STORAGE_POSTGRES_URL: ${STORAGE_POSTGRES_URL}
    ports:
      - "${BACKEND_OCTARINE_PORT}:${BACKEND_OCTARINE_PORT}"
    expose:
      - ${BACKEND_OCTARINE_PORT}
    volumes:
      - "$PWD/backend/octarine:/app"
    networks:
      - network-wisp
  
  backend-blind-io:
    container_name: wisp-backend-blind-io
    build:
      context: ./backend/blind-io
      dockerfile: ./Dockerfile.dev
    ports:
      - "${BACKEND_BLIND_IO_PORT}:${BACKEND_BLIND_IO_PORT}"
    volumes:
      - "$PWD/backend/blind-io:/app"
    networks:
      - network-wisp
  
  backend-peerserver:
    container_name: wisp-backend-peerserver
    build:
      context: ./backend/peerserver
      dockerfile: ./Dockerfile.dev
    ports:
      - "${BACKEND_PEERSERVER_PORT}:${BACKEND_PEERSERVER_PORT}"
    expose:
      - ${BACKEND_PEERSERVER_PORT}
    volumes:
      - "$PWD/backend/peerserver:/app"
    environment:
      DEBUG: "express:*"
    networks:
      - network-wisp
  
  storage-redis:
    container_name: wisp-storage-redis
    image: redis
    ports:
      - "${STORAGE_REDIS_PORT}:6379"
    command: "redis-server --port 6379"
    volumes:
      - "$PWD/dockerdata/redis:/data/redis"
    networks:
      - network-wisp
  
  storage-postgres:
    container_name: wisp-storage-postgres
    image: postgres
    ports:
      - "${STORAGE_POSTGRES_PORT}:5432"
    environment:
      POSTGRES_DB: ${STORAGE_POSTGRES_DB}
      POSTGRES_USER: ${STORAGE_POSTGRES_USER}
      POSTGRES_PASSWORD: ${STORAGE_POSTGRES_PASS}
    volumes:
      - "$PWD/dockerdata/postgres-data:/var/lib/postgresql/data"
      - "$PWD/dockerdata/postgres:/var/lib/postgres"
      - "$PWD/storage/postgres-init:/docker-entrypoint-initdb.d"
    networks:
      - network-wisp

  frontend:
    privileged: true
    container_name: wisp-frontend
    build:
      context: ./frontend
      dockerfile: ./Dockerfile.dev
    ports:
      - "5000:5000"
      - "35729:35729"
    expose:
      - 5000
      - 35729
    volumes:
      - $PWD/frontend:/app
    networks:
      - network-wisp

networks:
  network-wisp:
